# Notes:
# We use -j1 throughout as otherwise some proofs have high chance of failing due
# to out of memory conditions.

name: build_all

on:
  push:
  pull_request:

jobs:

  package-share:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis

    - uses: ./.github/actions/base
  make_bedrock2:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - run: nix-shell --arg coq true --run 'cd third_party; make -j1 build-bedrock2' default.nix
    - name: Cache bedrock2 and coqutil
      uses: actions/cache@v2
      with:
        path: third_party/bedrock2
        key: ${{ runner.os }}-build-${{ github.run_id }}-third_party-bedrock2

  make_extlib:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - run: nix-shell --arg coq true --run 'cd third_party; make -j1 build-extlib' default.nix
    - name: Cache extlib
      uses: actions/cache@v2
      with:
        path: third_party/coq-ext-lib
        key: ${{ runner.os }}-build-${{ github.run_id }}-third_party-extlib

  make_record_update:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - run: nix-shell --arg coq true --run 'cd third_party; make -j1 build-record-update' default.nix
    - name: Cache coq-record-update
      uses: actions/cache@v2
      with:
        path: third_party/coq-record-update
        key: ${{ runner.os }}-build-${{ github.run_id }}-third_party-record-update

  make_cava:
    needs: [make_bedrock2, make_extlib, make_record_update]

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: ./.github/actions/third_party_cache
    - run: nix-shell --arg coq true --run 'cd cava; make -j1 coq' default.nix
    - name: Cache cava
      uses: actions/cache@v2
      with:
        path: |
          cava
        key: ${{ runner.os }}-build-${{ github.run_id }}-cava

  make_cava_haskell:
    needs: make_cava

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - run: nix-shell --arg haskell true --run 'cd cava; make -j1 haskell' default.nix
    - name: Cache cava after Haskell step
      uses: actions/cache@v2
      with:
        path: |
          cava
          /home/runner/.ghc/
          /home/runner/.cabal/
        key: ${{ runner.os }}-build-${{ github.run_id }}-cava-haskell

  make_examples:
    needs: make_cava
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: ./.github/actions/third_party_cache
    - uses: ./.github/actions/cava_cache
    - run: nix-shell --arg coq true --run 'cd examples; make -j1 coq' default.nix
    - name: Cache examples
      uses: actions/cache@v2
      with:
        path: |
          examples
        key: ${{ runner.os }}-build-${{ github.run_id }}-cava-examples

  run_examples:
    needs: [make_examples, make_cava_haskell]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: ./.github/actions/third_party_cache
    - uses: ./.github/actions/cava_haskell_cache
    - name: Use examples cache
      uses: actions/cache@v2
      with:
        path: |
          examples
        key: ${{ runner.os }}-build-${{ github.run_id }}-cava-examples
    - run: nix-shell --arg haskell true --arg verilator true --run 'cd examples; make -j1' default.nix

  make_tests:
    needs: make_cava_haskell
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: ./.github/actions/third_party_cache
    - uses: ./.github/actions/cava_haskell_cache
    - run: nix-shell --arg coq true --arg haskell true --arg verilator true --run 'cd tests; make -j1' default.nix

  make_silveroak_pinmux:
    needs: make_cava_haskell
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: ./.github/actions/third_party_cache
    - uses: ./.github/actions/cava_haskell_cache
    - run: nix-shell --arg coq true --arg haskell true --arg verilator true --run 'cd silveroak-opentitan/pinmux; make -j1' default.nix

  make_silveroak_aes:
    needs: make_cava_haskell
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
    - uses: ./.github/actions/third_party_cache
    - uses: ./.github/actions/cava_haskell_cache
    - run: nix-shell --arg coq true --arg haskell true --arg verilator true --run 'cd silveroak-opentitan/aes; make -j1' default.nix
